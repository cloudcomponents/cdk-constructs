// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default setup 1`] = `
Object {
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "StaticWebsiteBucket0E92E0FC",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticWebsiteBucket0E92E0FC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteBucketAutoDeleteObjectsCustomResource840785FA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "StaticWebsiteBucketPolicy86C0E5CF",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteBucketPolicy86C0E5CF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteBucket0E92E0FC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "StaticWebsiteBucket0E92E0FC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "StaticWebsiteBucket0E92E0FC",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StaticWebsiteDistributionBAD21F75": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 180,
              "ErrorCode": 404,
              "ResponseCode": 404,
              "ResponsePagePath": "/error.html",
            },
            Object {
              "ErrorCachingMinTTL": 180,
              "ErrorCode": 403,
              "ResponseCode": 404,
              "ResponsePagePath": "/error.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "ResponseHeadersPolicyId": Object {
              "Ref": "StaticWebsiteResponseHeadersPolicyF3EBE566",
            },
            "TargetOriginId": "StaticWebsiteDistributionOrigin1128FCAFB",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "StaticWebsiteBucket0E92E0FC",
                  "RegionalDomainName",
                ],
              },
              "Id": "StaticWebsiteDistributionOrigin1128FCAFB",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticWebsiteDistributionOrigin1S3Origin3045572F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for StaticWebsiteDistributionOrigin1128FCAFB",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "StaticWebsiteResponseHeadersPolicyF3EBE566": Object {
      "Properties": Object {
        "ResponseHeadersPolicyConfig": Object {
          "CustomHeadersConfig": Object {
            "Items": Array [
              Object {
                "Header": "Server",
                "Override": true,
                "Value": "Server",
              },
            ],
          },
          "Name": "StaticWebsiteResponseHeadersPolicy53E0361F",
          "SecurityHeadersConfig": Object {
            "ContentSecurityPolicy": Object {
              "ContentSecurityPolicy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
              "Override": true,
            },
            "ContentTypeOptions": Object {
              "Override": true,
            },
            "FrameOptions": Object {
              "FrameOption": "DENY",
              "Override": true,
            },
            "ReferrerPolicy": Object {
              "Override": true,
              "ReferrerPolicy": "same-origin",
            },
            "StrictTransportSecurity": Object {
              "AccessControlMaxAgeSec": 31536000,
              "IncludeSubdomains": true,
              "Override": true,
              "Preload": true,
            },
            "XSSProtection": Object {
              "ModeBlock": true,
              "Override": true,
              "Protection": true,
            },
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
  },
}
`;

exports[`lambda at edge 1`] = `
Object {
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "StaticWebsiteBucket0E92E0FC",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticWebsiteBucket0E92E0FC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteBucketAutoDeleteObjectsCustomResource840785FA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "StaticWebsiteBucketPolicy86C0E5CF",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteBucketPolicy86C0E5CF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteBucket0E92E0FC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "StaticWebsiteBucket0E92E0FC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "StaticWebsiteBucket0E92E0FC",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StaticWebsiteDistributionBAD21F75": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 180,
              "ErrorCode": 404,
              "ResponseCode": 404,
              "ResponsePagePath": "/error.html",
            },
            Object {
              "ErrorCachingMinTTL": 180,
              "ErrorCode": 403,
              "ResponseCode": 404,
              "ResponsePagePath": "/error.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "LambdaFunctionAssociations": Array [
              Object {
                "EventType": "origin-request",
                "LambdaFunctionARN": "arn:aws:lambda:us-east-1:123456789012:function:my-function:1",
              },
            ],
            "ResponseHeadersPolicyId": Object {
              "Ref": "StaticWebsiteResponseHeadersPolicyF3EBE566",
            },
            "TargetOriginId": "StaticWebsiteDistributionOrigin1128FCAFB",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "StaticWebsiteBucket0E92E0FC",
                  "RegionalDomainName",
                ],
              },
              "Id": "StaticWebsiteDistributionOrigin1128FCAFB",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticWebsiteDistributionOrigin1S3Origin3045572F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for StaticWebsiteDistributionOrigin1128FCAFB",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "StaticWebsiteResponseHeadersPolicyF3EBE566": Object {
      "Properties": Object {
        "ResponseHeadersPolicyConfig": Object {
          "CustomHeadersConfig": Object {
            "Items": Array [
              Object {
                "Header": "Server",
                "Override": true,
                "Value": "Server",
              },
            ],
          },
          "Name": "StaticWebsiteResponseHeadersPolicy53E0361F",
          "SecurityHeadersConfig": Object {
            "ContentSecurityPolicy": Object {
              "ContentSecurityPolicy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
              "Override": true,
            },
            "ContentTypeOptions": Object {
              "Override": true,
            },
            "FrameOptions": Object {
              "FrameOption": "DENY",
              "Override": true,
            },
            "ReferrerPolicy": Object {
              "Override": true,
              "ReferrerPolicy": "same-origin",
            },
            "StrictTransportSecurity": Object {
              "AccessControlMaxAgeSec": 31536000,
              "IncludeSubdomains": true,
              "Override": true,
              "Preload": true,
            },
            "XSSProtection": Object {
              "ModeBlock": true,
              "Override": true,
              "Protection": true,
            },
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
  },
}
`;

exports[`test setting error responses 1`] = `
Object {
  "Resources": Object {
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "StaticWebsiteBucket0E92E0FC",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "StaticWebsiteBucket0E92E0FC": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteBucketAutoDeleteObjectsCustomResource840785FA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "StaticWebsiteBucketPolicy86C0E5CF",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "StaticWebsiteBucketPolicy86C0E5CF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "StaticWebsiteBucket0E92E0FC",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteBucket0E92E0FC",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "StaticWebsiteBucket0E92E0FC",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Principal": Object {
                "CanonicalUser": Object {
                  "Fn::GetAtt": Array [
                    "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                    "S3CanonicalUserId",
                  ],
                },
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "StaticWebsiteBucket0E92E0FC",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "StaticWebsiteDistributionBAD21F75": Object {
      "Properties": Object {
        "DistributionConfig": Object {
          "CustomErrorResponses": Array [
            Object {
              "ErrorCachingMinTTL": 180,
              "ErrorCode": 404,
              "ResponseCode": 200,
              "ResponsePagePath": "/index.html",
            },
          ],
          "DefaultCacheBehavior": Object {
            "AllowedMethods": Array [
              "GET",
              "HEAD",
            ],
            "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
            "Compress": true,
            "ResponseHeadersPolicyId": Object {
              "Ref": "StaticWebsiteResponseHeadersPolicyF3EBE566",
            },
            "TargetOriginId": "StaticWebsiteDistributionOrigin1128FCAFB",
            "ViewerProtocolPolicy": "redirect-to-https",
          },
          "DefaultRootObject": "index.html",
          "Enabled": true,
          "HttpVersion": "http2",
          "IPV6Enabled": true,
          "Origins": Array [
            Object {
              "DomainName": Object {
                "Fn::GetAtt": Array [
                  "StaticWebsiteBucket0E92E0FC",
                  "RegionalDomainName",
                ],
              },
              "Id": "StaticWebsiteDistributionOrigin1128FCAFB",
              "S3OriginConfig": Object {
                "OriginAccessIdentity": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "origin-access-identity/cloudfront/",
                      Object {
                        "Ref": "StaticWebsiteDistributionOrigin1S3Origin3045572F",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "PriceClass": "PriceClass_100",
        },
      },
      "Type": "AWS::CloudFront::Distribution",
    },
    "StaticWebsiteDistributionOrigin1S3Origin3045572F": Object {
      "Properties": Object {
        "CloudFrontOriginAccessIdentityConfig": Object {
          "Comment": "Identity for StaticWebsiteDistributionOrigin1128FCAFB",
        },
      },
      "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
    },
    "StaticWebsiteResponseHeadersPolicyF3EBE566": Object {
      "Properties": Object {
        "ResponseHeadersPolicyConfig": Object {
          "CustomHeadersConfig": Object {
            "Items": Array [
              Object {
                "Header": "Server",
                "Override": true,
                "Value": "Server",
              },
            ],
          },
          "Name": "StaticWebsiteResponseHeadersPolicy53E0361F",
          "SecurityHeadersConfig": Object {
            "ContentSecurityPolicy": Object {
              "ContentSecurityPolicy": "default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; object-src 'none'; connect-src 'self'",
              "Override": true,
            },
            "ContentTypeOptions": Object {
              "Override": true,
            },
            "FrameOptions": Object {
              "FrameOption": "DENY",
              "Override": true,
            },
            "ReferrerPolicy": Object {
              "Override": true,
              "ReferrerPolicy": "same-origin",
            },
            "StrictTransportSecurity": Object {
              "AccessControlMaxAgeSec": 31536000,
              "IncludeSubdomains": true,
              "Override": true,
              "Preload": true,
            },
            "XSSProtection": Object {
              "ModeBlock": true,
              "Override": true,
              "Protection": true,
            },
          },
        },
      },
      "Type": "AWS::CloudFront::ResponseHeadersPolicy",
    },
  },
}
`;
